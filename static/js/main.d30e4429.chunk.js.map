{"version":3,"sources":["components/Header/Header.jsx","components/Footer/Footer.jsx","layouts/Layout.jsx","components/Headings/Subheading/Subheading.jsx","components/Headings/Heading/Heading.jsx","components/HomeSwiper/SwiperItem/SwiperItem.jsx","components/HomeSwiper/HomeSwiper.jsx","pages/index.jsx","pages/about.jsx","pages/listings.jsx","pages/news.jsx","pages/contact.jsx","pages/login.jsx","pages/register.jsx","pages/projects.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","Layout","PageHeader","props","location","useLocation","className","to","theme","mode","selectedKeys","pathname","name","path","map","menu","Item","key","PageFooter","Content","Footer","MainLayout","basename","children","Subheading","center","Heading","SwiperItem","HomeSwiper","params","navigation","nextEl","prevEl","speed","loop","HomePage","AboutPage","ListingsPage","NewsPage","ContactPage","LoginPage","RegisterPage","ProjectsPage","App","exact","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d30e4429.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { Layout, Menu } from 'antd';\r\nimport './Header.scss';\r\n\r\nconst { Header } = Layout;\r\n\r\nconst PageHeader = (props) => {\r\n\r\n  const menuItems = [\r\n    { name: 'Trang chủ', path: '/' },\r\n    { name: 'Thông tin', path: '/thong-tin' },\r\n    { name: 'Bất động sản', path: '/bat-dong-san' },\r\n    { name: 'Dự án', path: '/du-an' },\r\n    { name: 'Tin tức', path: '/tin-tuc' },\r\n    { name: 'Liên hệ', path: '/lien-he' },\r\n  ]\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <Header className=\"header\">\r\n      <Link className=\"header_brand\" to=\"/\">BDS</Link>\r\n\r\n      <Menu  className=\"header_menu\" theme=\"dark\" mode=\"horizontal\" selectedKeys={[location.pathname]}>\r\n        {\r\n          menuItems.map(menu => {\r\n            return (\r\n              <Menu.Item key={menu.path}>\r\n                <Link to={menu.path}>{menu.name}</Link>\r\n              </Menu.Item>\r\n            )\r\n          })\r\n        }\r\n      </Menu>\r\n      <Menu className=\"header_menu header_menu--auth\" theme=\"dark\" mode=\"horizontal\" selectedKeys={[location.pathname]}>\r\n        <Menu.Item key=\"/login\">\r\n          <Link to=\"/dang-nhap\">Đăng nhập</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"/register\">\r\n          <Link to=\"/dang-ky\">Đăng ký</Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Header>\r\n  )\r\n}\r\n\r\nexport default PageHeader;","import React from 'react';\r\n\r\nconst PageFooter = props => {\r\n  return (\r\n    <div>Footer</div>\r\n  )\r\n}\r\n\r\nexport default PageFooter;","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Layout } from 'antd';\r\nimport PageHeader from 'components/Header/Header';\r\nimport PageFooter from 'components/Footer/Footer';\r\nimport './Layout.scss';\r\nconst { Content, Footer } = Layout;\r\n\r\nconst MainLayout = props => {\r\n  return (\r\n    <Layout className=\"layout\">\r\n      <BrowserRouter basename=\"/homedey\">\r\n        <PageHeader />\r\n        <Content className=\"layout_content\">\r\n\r\n          {\r\n            props.children\r\n          }\r\n\r\n        </Content>\r\n\r\n        <Footer>\r\n          <PageFooter />\r\n        </Footer>\r\n      </BrowserRouter>\r\n    </Layout >\r\n  )\r\n}\r\n\r\nexport default MainLayout;","import React from 'react';\r\nimport './Subheading.scss';\r\n\r\nconst Subheading = props => {\r\n  return (\r\n    <p className={`subheading${props.center ? ' subheading--center' : ''}`}>\r\n      {props.children}\r\n    </p>\r\n  )\r\n}\r\n\r\nexport default Subheading;","import React from 'react';\r\nimport './Heading.scss';\r\n\r\nconst Heading = props => {\r\n  return (\r\n    <h2 className={`heading${props.center ? ' heading--center' : ''}`}>\r\n      {props.children}\r\n    </h2>\r\n  )\r\n}\r\n\r\nexport default Heading;","import React from 'react';\r\nimport './SwiperItem.scss';\r\n\r\nconst SwiperItem = props => {\r\n  return (\r\n    <div className=\"swiper-item\">\r\n      <div className=\"swiper-item_text\">\r\n        <div className=\"swiper-item_name\">1243 Main Avenue Left Town</div>\r\n        <div className=\"swiper-item_price\">$ 482 900</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SwiperItem;","import React from 'react';\r\nimport Swiper from 'react-id-swiper';\r\nimport SwiperItem from './SwiperItem/SwiperItem';\r\nimport 'swiper/css/swiper.css';\r\nimport './HomeSwiper.scss';\r\n\r\nconst HomeSwiper = props => {\r\n  const params = {\r\n    navigation: {\r\n      nextEl: '.swiper-button-next',\r\n      prevEl: '.swiper-button-prev'\r\n    },\r\n    // autoplay: {\r\n    //   delay: 3000,\r\n    //   disableOnInteraction: false\r\n    // },\r\n    speed: 1500,\r\n    loop: true\r\n  }\r\n\r\n  return (\r\n    <Swiper {...params}>\r\n      <div>\r\n        <SwiperItem />\r\n      </div>\r\n      <div>\r\n        <SwiperItem />\r\n      </div>\r\n      <div>\r\n        <SwiperItem />\r\n      </div>\r\n    </Swiper>\r\n  )\r\n}\r\n\r\nexport default HomeSwiper;","import React from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport Subheading from 'components/Headings/Subheading/Subheading';\r\n\r\nimport 'styles/layouts/home.scss';\r\nimport Heading from 'components/Headings/Heading/Heading';\r\nimport HomeSwiper from 'components/HomeSwiper/HomeSwiper';\r\n\r\nconst HomePage = props => {\r\n  return (\r\n    <div className=\"home\">\r\n      <section className=\"home_slider\">\r\n        <HomeSwiper />\r\n      </section>\r\n      <section className=\"featured\">\r\n        <Subheading center>Bất động sản</Subheading>\r\n        <Heading center>Nổi bật</Heading>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\n\r\nconst AboutPage = props => {\r\n  return (\r\n    <div>About page</div>\r\n  )\r\n}\r\n\r\nexport default AboutPage;","import React from 'react';\r\n\r\nconst ListingsPage = props => {\r\n  return (\r\n    <div>Listings page</div>\r\n  )\r\n}\r\n\r\nexport default ListingsPage;","import React from 'react';\r\n\r\nconst NewsPage = props => {\r\n  return (\r\n    <div>News page</div>\r\n  )\r\n}\r\n\r\nexport default NewsPage;","import React from 'react';\r\n\r\nconst ContactPage = props => {\r\n  return (\r\n    <div>Contact page</div>\r\n  )\r\n}\r\n\r\nexport default ContactPage;","import React from 'react';\r\n\r\nconst LoginPage = props => {\r\n  return (\r\n    <div>Login page</div>\r\n  )\r\n}\r\n\r\nexport default LoginPage;","import React from 'react';\r\n\r\nconst RegisterPage = props => {\r\n  return (\r\n    <div>Register page</div>\r\n  )\r\n}\r\n\r\nexport default RegisterPage;","import React from 'react';\r\n\r\nconst ProjectsPage = props => {\r\n  return (\r\n    <div>Projects page</div>\r\n  )\r\n}\r\n\r\nexport default ProjectsPage;","import React from 'react';\nimport Layout from 'layouts/Layout';\nimport {\n  Switch,\n  Route\n} from 'react-router-dom';\nimport HomePage from 'pages';\nimport AboutPage from 'pages/about';\nimport ListingsPage from 'pages/listings';\nimport NewsPage from 'pages/news';\nimport ContactPage from 'pages/contact';\nimport LoginPage from 'pages/login';\nimport RegisterPage from 'pages/register';\nimport ProjectsPage from 'pages/projects';\n\nconst App = props => {\n  return <Layout>\n    <Switch>\n      <Route path=\"/\" exact component={HomePage} />\n      <Route path=\"/thong-tin\" component={AboutPage} />\n      <Route path=\"/bat-dong-san\" component={ListingsPage} />\n      <Route path=\"/du-an\" component={ProjectsPage} />\n      <Route path=\"/tin-tuc\" component={NewsPage} />\n      <Route path=\"/lien-he\" component={ContactPage} />\n      <Route path=\"/dang-nhap\" component={LoginPage} />\n      <Route path=\"/dang-ky\" component={RegisterPage} />\n    </Switch>\n  </Layout>\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'antd/dist/antd.css';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}